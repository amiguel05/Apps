// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;

namespace Agencia2.BO
{
	public class GRUPO_TIPOS : _GRUPO_TIPOS
	{
		public GRUPO_TIPOS()
		{
		
		}
    }

        public class Grupo_TiposRecord
        {
            public int GRUPO_TIPO_ID { set; get; }
            public string CODIGO { set; get; }
            public string NOMBRE { set; get; }
            public string DESCR { set; get; }  
        }


        public static class sGrupo_Tipos
        {

            public static DataView returnView(ref string sMensaje)
            {
                sMensaje = "";
                GRUPO_TIPOS oCom = new GRUPO_TIPOS();
                try
                {

                    oCom.ConnectionString = Parametros.CadenaConexion;

                    oCom.Query.AddResultColumn("GRUPO_TIPO_ID");
                    oCom.Query.AddResultColumn("CODIGO");
                    oCom.Query.AddResultColumn("NOMBRE");

                    oCom.Query.Load();


                }
                catch (Exception ex)
                {
                    sMensaje = ex.Message.ToString();


                }

                return oCom.DefaultView;

            }
            public static DataView returnCombo(ref string sMensaje)
            {
                sMensaje = "";
                GRUPO_TIPOS oCom = new GRUPO_TIPOS();
                try
                {

                    oCom.ConnectionString = Parametros.CadenaConexion;

                    oCom.Query.AddResultColumn("GRUPO_TIPO_ID");
                    oCom.Query.AddResultColumn("NOMBRE");

                    oCom.Query.Load();


                }
                catch (Exception ex)
                {
                    sMensaje = ex.Message.ToString();


                }
                return oCom.DefaultView;
            }
            public static bool DeleteData(Grupo_TiposRecord pComp, ref string sMensaje)
            {
                bool bRetorno = true;

                try
                {
                    GRUPO_TIPOS oCom = new GRUPO_TIPOS();
                    oCom.ConnectionString = Parametros.CadenaConexion;

                    oCom.LoadByPrimaryKey(pComp.GRUPO_TIPO_ID);


                    oCom.MarkAsDeleted();

                    oCom.Save();

                }
                catch (Exception ex)
                {
                    sMensaje = ex.Message.ToString();
                    bRetorno = false;

                }


                return bRetorno;
            }


            public static bool SaveData(Grupo_TiposRecord pComp, ref string sMensaje, bool bAdiciona)
            {
                bool bRetorno = true;

                try
                {
                    GRUPO_TIPOS oCom = new GRUPO_TIPOS();
                    oCom.ConnectionString = Parametros.CadenaConexion;

                    if (!bAdiciona)
                        oCom.LoadByPrimaryKey(pComp.GRUPO_TIPO_ID);
                    else
                        oCom.AddNew();

                    oCom.CODIGO = pComp.CODIGO;
                    oCom.NOMBRE = pComp.NOMBRE;
                    oCom.DESCR = pComp.DESCR;
                 

                    oCom.Save();

                }
                catch (Exception ex)
                {
                    sMensaje = ex.Message.ToString();
                    bRetorno = false;

                }


                return bRetorno;
            }

            public static bool ReturnById(int Id, ref GRUPO_TIPOS pComp, ref string sMensaje)
            {
                bool bRetorno = true;

                try
                {
                    GRUPO_TIPOS oCom = new GRUPO_TIPOS();
                    oCom.ConnectionString = Parametros.CadenaConexion;
                    oCom.LoadByPrimaryKey(Id);

                    pComp = oCom;


                }
                catch (Exception ex)
                {
                    sMensaje = ex.Message.ToString();
                    bRetorno = false;
                }

                return bRetorno;


            }
        }



	}
